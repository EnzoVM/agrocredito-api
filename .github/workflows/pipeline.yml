name: Pipeline
on:
  pull_request:
    branches:
      - develop
    types: [opened, synchronize, reopened]

env:
  AWS_APPLICATION_NAME: ${{ secrets.AWS_APPLICATION_NAME }}
  AWS_ENVIROMENT_NAME: ${{ secrets.AWS_ENVIROMENT_NAME }}
  AWS_VERSION_LABEL: ${{ secrets.AWS_VERSION_LABEL }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_IMAGE_NAME }}
  AWS_ECR_LINK: ${{ secrets.AWS_ECR_LINK }}
  AWS_ECR_PATH: ${{ secrets.AWS_ECR_PATH }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && github.base_ref == 'main'}}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install dependencies
        run: npm ci
      - name: Test and Coverage
        run: npm run test
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}

  elastic-beanstalk:
    name: Deploy Elastic Beanstalk
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && github.base_ref == 'develop'}}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Install dependencies
        run: npm i
      - name: Build app
        run: npm run build
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ env.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ env.AWS_APPLICATION_NAME }}
          environment_name: ${{ env.AWS_ENVIROMENT_NAME }}
          version_label: ${{ env.AWS_VERSION_LABEL }}
          region: ${{ env.AWS_REGION }}